@import "./variables.scss";

// NAVBAR
@mixin navLinkBasic($height, $fontSize, $padding) {
    display: block;
    position: relative;
    min-height: $height;
    padding: 0 $padding;
    line-height: $height;
    transition: all 0.4s ease-in-out 0s;
    color: $navFontColor;
    font-size: $fontSize;
}
@mixin navLinkStyle($height, $fontSize, $padding) {
    @include navLinkBasic($height, $fontSize, $padding);
    @include navLinkHover(true);
}
@mixin navBasketStyle($height, $fontSize, $padding) {
    @include navLinkBasic($height, $fontSize, $padding);
    @include navLinkHover(false);
}
@mixin navLinkHover($link) {
    &:hover {
        color: $navFontColorActive;
        @if $link == true {
            background-color: $navBackgroundColor;
        }
    }
}
@mixin navActiveClass {
    .active {
        border: 0;
        @content;
        * { color: $navFontColorActive !important; }
    }
    .active-glyph {
        @content;
        * { color: $navFontColorActive !important; }
    }
}
@mixin navUlStyle($width, $widthLast, $underlineColor) {
    @include navActiveClass {
        border-bottom: solid 2px $navFontColorActive;
    };
    li {
        width: $width;
        a {
            &:link, &:visited, &:active {
                background-color: $navBackgroundColor;
            }
        }
        @include underlineBlock($underlineColor);
        &:last-child {
            border: 0;
            width: $widthLast;
            &:last-child {
                @include underlineBlock($transparent);
            }
        }
    }
}
// END NAVBAR

// MEDIA QUERIES
@mixin mQ($args...) {
    @if length($args) == 1{
        @media screen and (min-width: nth($args, 1)) {
             @content;
        }
    }
    @else if length($args) {
         @media screen and (min-width: nth($args, 1)) and (max-width: nth($args, 2)){
            @content;
        }
    }
}
